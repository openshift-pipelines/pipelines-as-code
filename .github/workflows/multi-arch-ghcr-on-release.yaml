name: Create and publish Docker multi-arch images to ghcr on release

on:
  push:
    branches:
      - release-v*
      - stable

env:
  REGISTRY: ghcr.io
  CONTROLLER_IMAGE_NAME: ${{ github.repository }}-controller
  WATCHER_IMAGE_NAME: ${{ github.repository }}-watcher
  WEBHOOK_IMAGE_NAME: ${{ github.repository }}-webhook
  TKN_PAC_IMAGE_NAME: ${{ github.repository }}-tkn-pac

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Fetch version from branch name
        id: fetch-version
        run: |
          releaseBranchFormat='release-v'
          if [[ ${{ github.ref_name }} == ${releaseBranchFormat}* ]]; then
            echo "version=${${{ github.ref_name }}#*-}" >> $GITHUB_OUTPUT
          else
            echo "version=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          fi

      - name: Extract metadata (tags, labels) for Docker (Controller)
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81
        with:
          images: ${{ env.REGISTRY }}/${{ env.CONTROLLER_IMAGE_NAME }}
          tags: |
            ${{ steps.fetch-version.outputs.version }}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'stable') }}

      - name: Build and push controller docker image
        uses: docker/build-push-action@v5.2.0
        with:
          context: .
          build-args: |
            BINARY_NAME=pipelines-as-code-controller
          platforms: linux/amd64,linux/ppc64le,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Extract metadata (tags, labels) for Docker (Watcher)
        id: meta-watcher
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81
        with:
          images: ${{ env.REGISTRY }}/${{ env.WATCHER_IMAGE_NAME }}
          tags: |
            ${{ steps.fetch-version.outputs.version }}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'stable') }}

      - name: Build and push watcher docker image
        uses: docker/build-push-action@v5.2.0
        with:
          context: .
          build-args: |
            BINARY_NAME=pipelines-as-code-watcher
          platforms: linux/amd64,linux/ppc64le,linux/arm64
          push: true
          tags: ${{ steps.meta-watcher.outputs.tags }}
          labels: ${{ steps.meta-watcher.outputs.labels }}

      - name: Extract metadata (tags, labels) for Docker (Webhook)
        id: meta-webhook
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81
        with:
          images: ${{ env.REGISTRY }}/${{ env.WEBHOOK_IMAGE_NAME }}
          tags: |
            ${{ steps.fetch-version.outputs.version }}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'stable') }}

      - name: Build and push webhook docker image
        uses: docker/build-push-action@v5.2.0
        with:
          context: .
          build-args: |
            BINARY_NAME=pipelines-as-code-webhook
          platforms: linux/amd64,linux/ppc64le,linux/arm64
          push: true
          tags: ${{ steps.meta-webhook.outputs.tags }}
          labels: ${{ steps.meta-webhook.outputs.labels }}

      - name: Extract metadata (tags, labels) for tkn-pac
        id: meta-cli
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81
        with:
          images: ${{ env.REGISTRY }}/${{ env.TKN_PAC_IMAGE_NAME }}
          tags: |
            ${{ steps.fetch-version.outputs.version }}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'stable') }}

      - name: Build and push cli docker image
        uses: docker/build-push-action@v5.2.0
        with:
          context: .
          build-args: |
            BINARY_NAME=tkn-pac
          platforms: linux/amd64,linux/ppc64le,linux/arm64
          push: true
          tags: ${{ steps.meta-cli.outputs.tags }}
          labels: ${{ steps.meta-cli.outputs.labels }}
