# Copyright 2021 Red Hat
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
data:
  # The application name, you can customize this label
  application-name: "Pipelines as Code CI"

  # Whether to automatically create a secret with the token to be use by git-clone
  secret-auto-create: "true"

  # Tekton HUB API urls
  hub-url: "https://api.hub.tekton.dev/v1"

  # Tekton HUB catalog name
  hub-catalog-name: "tekton"

  # Allow fetching remote tasks
  remote-tasks: "true"

  # Using the URL of the Tekton dashboard, Pipelines-as-Code generates a URL to the
  # PipelineRun on the Tekton dashboard
  tekton-dashboard-url: ""

  # Enable or disable the inspection of container logs to detect error message
  # and expose them as annotations on Pull Request. Only Github apps is supported
  #
  # This feature is currently alpha, use it at your own risk
  error-detection-from-container-logs: "false"

  # How many lines to grab from the container when inspecting the
  # logs. Increasing this value may increase the watcher memory usage.
  # Use -1 for unlimited lines.
  error-detection-max-number-of-lines: "50"

  # The default regexp used when we use the simple error detection
  error-detection-simple-regexp: |
    ^(?P<filename>[^:]*):(?P<line>[0-9]+):(?P<column>[0-9]+):[ ]*(?P<error>.*)

  # Since public bitbucket doesn't have the concept of Secret, we need to be
  # able to secure the request by querying https://ip-ranges.atlassian.com/,
  # this only happen for public bitbucket (ie: when provider.url is not set in
  # repository spec). If you want to override this, you need to bear in mind
  # this could be a security issue, a malicious user can send a PR to your repo
  # with a modification to your PipelineRun that would grab secrets, tunnel or
  # others and then send a malicious webhook payload to the controller which
  # look like a authorized owner has send the PR to run it..
  bitbucket-cloud-check-source-ip: "true"

  # Add extra IPS (ie: 127.0.0.1) or networks (127.0.0.0/16) separated by commas.
  bitbucket-cloud-additional-source-ip: ""

  # max-keep-run-upper-limit defines the upper limit for max-keep-run annotation value which a user can set on
  # pipelineRun. the value set on annotation should be less than or equal to the upper limit otherwise
  # the upper limit will be used while cleaning up
  max-keep-run-upper-limit: ""

  # if defined then applies to all pipelineRun who doesn't have max-keep-runs annotation
  default-max-keep-runs: ""

  # Whether to auto configure newly created repositories, this will create a new namespace
  # and repository CR, supported only with GitHub App
  auto-configure-new-github-repo: "false"

  # add a template to generate name for namespace for your auto configured github repo
  # supported fields are repo_owner, repo_name
  # eg. if defined as `{{repo_owner}}-{{repo_name}}-ci`, then namespace generated for repository
  # https://github.com/owner/repo will be `owner-repo-ci`
  auto-configure-repo-namespace-template: ""

kind: ConfigMap
metadata:
  name: pipelines-as-code
  namespace: pipelines-as-code
  labels:
    app.kubernetes.io/version: "devel"
    app.kubernetes.io/part-of: pipelines-as-code
