---

apiVersion: triggers.tekton.dev/v1alpha1
kind: EventListener
metadata:
  name: openshift-pipelines-ascode-interceptor
  namespace: openshift-pipelines-ascode
spec:
  triggers:
    - name: github-listener
      interceptors:
        # TODO: Add webhook secret
        - ref:
            name: github-listener
          params:
            - name: "eventTypes"
              value: ["pull_request", "issue_comment"]
        - name: "Only form a Github APP and PR Opened, Created, Syncronized"
          ref:
            name: "cel"
          params:
            - name: "filter"
              value: "body.action in ['created', 'opened', 'synchronize'] && 'installation' in body"
      bindings:
        - ref: openshift-pipelines-ascode-bindings
      template:
        ref: openshift-pipelines-ascode-template
  resources:
    kubernetesResource:
      spec:
        template:
          spec:
            serviceAccountName: openshift-pipelines-ascode-sa-el
---
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerTemplate
metadata:
  name: openshift-pipelines-ascode-template
  namespace: openshift-pipelines-ascode
  annotations:
    triggers.tekton.dev/old-escape-quotes: "true"
spec:
  params:
    - name: installation_id
    - name: json
  resourcetemplates:
    - apiVersion: tekton.dev/v1beta1
      kind: PipelineRun
      metadata:
        generateName: openshift-pipelines-ascode-run-
        labels:
          tekton.dev/pipeline: openshift-pipelines-ascode
      spec:
        serviceAccountName: openshift-pipelines-ascode-sa
        params:
        - name: installation_id
          value: $(tt.params.installation_id)
        - name: json
          value: $(tt.params.json)

        pipelineSpec:
          params:
            - name: installation_id
            - name: json
          workspaces:
            - name: secrets
          tasks:
            - name: get-token
              taskRef:
                name: github-app-token
              params:
                - name: installation_id
                  value: $(params.installation_id)
              workspaces:
                - name: secrets
                  workspace: secrets
            - name: openshift-pipelines-ascode
              runAfter: [get-token]
              taskRef:
                name: openshift-pipelines-ascode
              params:
              - name: token
                value: "$(tasks.get-token.results.token)"
              - name: json
                value: "$(params.json)"
        workspaces:
        - name: secrets
          secret:
            secretName: github-app-secret
---
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerBinding
metadata:
  name: tekton-asa-code-bindings
  namespace: openshift-pipelines-ascode
spec:
  params:
    - name: json
      value: $(body)
    - name: installation_id
      value: $(body.installation.id)
